{"version":3,"file":"static/js/111.84224efe.chunk.js","mappings":"qOAEMA,EAAaC,OACjB,0HAGIC,EAAeD,OAAO,SAEfE,EAAgBC,EAAAA,KAAaC,MAAM,CAC9CC,KAAMF,EAAAA,KAAaG,IAAI,GAAGC,QAAQR,GAAYS,WAC9CC,OAAQN,EAAAA,KAAaO,OAAO,IAAIH,QAAQN,GAAcO,aAG3CG,EAAiBR,EAAAA,KAAaC,MAAM,CAC/CC,KAAMF,EAAAA,KAAaG,IAAI,GAAGE,WAC1BI,MAAOT,EAAAA,KAAaS,QAAQJ,WAC5BK,SAAUV,EAAAA,KAAaG,IAAI,GAAGE,aAGnBM,EAAYX,EAAAA,KAAaC,MAAM,CAC1CQ,MAAOT,EAAAA,KAAaS,QAAQJ,WAC5BK,SAAUV,EAAAA,KAAaG,IAAI,GAAGE,Y,yFClBnBO,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6I,sECDRE,E,QAAYF,GAAAA,EAAH,mFAGX,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,G,sECHCC,E,QAAQP,GAAAA,MAAH,yOAOI,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,G,sECPVE,E,QAAYR,GAAAA,GAAH,gHAEL,SAAAG,GAAC,OAAIA,EAAEC,MAAMK,WAAWC,IAAvB,G,oECFLC,E,QAAgBX,GAAAA,OAAH,+ZAKH,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAEb,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,G,qECPCM,EAAW,WACtB,IAAMC,GAAcC,EAAAA,EAAAA,MAGpB,MAAO,EAFUC,EAAAA,EAAAA,MAECF,EACnB,C,0LCGYG,EAAY,WACvB,OAAmBJ,EAAAA,EAAAA,KAAZK,GAAP,eAWA,OACE,SAAC,KAAD,CACEC,cAAe,CAAEtB,MAAO,GAAIC,SAAU,IACtCsB,SAZkB,SAACC,GACrB,IAAMC,EAAO,CACXzB,MAAOwB,EAAOxB,MACdC,SAAUuB,EAAOvB,UAEnBoB,GAASK,EAAAA,EAAAA,IAAUD,IAClB,IACF,EAMGE,iBAAkBzB,EAAAA,GAHpB,SAKG,SAAA0B,GAAK,OACJ,UAAC,IAAD,YACE,SAAC,EAAAC,EAAD,CACEC,KAAK,OACLrC,KAAK,QACLsC,YAAY,QACZC,SAAUJ,EAAMK,aAChBC,MAAON,EAAMJ,OAAOxB,SACtB,SAAC,KAAD,CAAcP,KAAK,QAAQ0C,OAAQ,SAAAC,GAAG,OAAI,SAAC,IAAD,UAAYA,GAAhB,KACtC,SAAC,EAAAP,EAAD,CACEC,KAAK,WACLrC,KAAK,WACLsC,YAAY,WACZC,SAAUJ,EAAMK,aAChBC,MAAON,EAAMJ,OAAOvB,YACtB,SAAC,KAAD,CAAcR,KAAK,WAAW0C,OAAQ,SAAAC,GAAG,OAAI,SAAC,IAAD,UAAYA,GAAhB,KACzC,SAAC,IAAD,CAAeN,KAAK,SAApB,sBAhBE,GAqBX,ECrCD,EATc,WACZ,OACE,iCACE,SAAC,IAAD,0DACA,SAACV,EAAD,MAGL,C","sources":["Schem/formsSchema.js","components/common/AuthForm.styled.js","components/common/ErrorText.styled.js","components/common/Input.styled..js","components/common/MainTitle.styled.js","components/common/PrimaryButton.styled.js","hooks/useRedux.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nconst nameRegExp = RegExp(\n  /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/\n);\n\nconst numberRegExp = RegExp(/[0-9]/);\n\nexport const contactSchema = yup.object().shape({\n  name: yup.string().min(2).matches(nameRegExp).required(),\n  number: yup.string().length(12).matches(numberRegExp).required(),\n});\n\nexport const registerSchema = yup.object().shape({\n  name: yup.string().min(2).required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(4).required(),\n});\n\nexport const logSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(4).required(),\n});\n","import styled from \"styled-components\";\nimport { Form } from \"formik\";\n\nexport const AuthForm = styled(Form)`\n  max-width: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;","import styled from \"styled-components\";\n\nexport const ErrorText = styled.p`\n  margin-bottom: 10px;\n  font-size: 16px;\n  color: ${p => p.theme.colors.white};\n`;","import styled from \"styled-components\";\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  height: 40px;\n  margin: 0 0 10px 0;\n  padding: 8px;\n  font-size: 14px;\n  background-color: ${p => p.theme.colors.white};\n  outline: none;\n  border: 2px solid #D75C78;\n  border-radius: 5px;\n`;","import styled from \"styled-components\";\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 20px;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  text-align: center;\n  font-size: 20px;\n`;","import styled from \"styled-components\";\n\nexport const PrimaryButton = styled.button`\n  display: block;\n  padding: 5px 20px;\n  border: none;\n  border-radius: 2px;\n  outline: 1px solid ${p => p.theme.colors.white};\n  background-color: transparent;\n  color: ${p => p.theme.colors.white};\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  @media screen and (max-width: 425px) {\n    padding: 3px 10px;\n    font-size: 9px;\n  }\n\n  &:hover {\n    box-shadow: 5px 5px 18px -3px rgba(255,255,255,0.5);\n  }\n\n\n`;","import { createSelectorHook, useDispatch } from \"react-redux\";\n\nexport const useRedux = () => {\n  const useSelector = createSelectorHook();\n  const dispatch = useDispatch()\n\n  return [dispatch, useSelector];\n};","import { Formik, ErrorMessage } from \"formik\";\nimport { loginUser } from \"redux/authSlice\";\nimport { useRedux } from \"hooks/useRedux\";\nimport { Navigate } from \"react-router\";\nimport { logSchema } from \"Schem/formsSchema\";\nimport { AuthForm } from \"components/common/AuthForm.styled\";\nimport { PrimaryButton } from \"components/common/PrimaryButton.styled\";\nimport { ErrorText } from \"components/common/ErrorText.styled\";\nimport { Input } from \"components/common/Input.styled.\";\n\nexport const LoginForm = () => {\n  const [dispatch] = useRedux();\n\n  const submitHandler = (values) => {\n    const user = {\n      email: values.email,\n      password: values.password,\n    };\n    dispatch(loginUser(user));\n    <Navigate to=\"contacts\" replace={true} />\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      onSubmit={submitHandler}\n      validationSchema={logSchema}\n    >\n      {props => (\n        <AuthForm>\n          <Input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"email\"\n            onChange={props.handleChange}\n            value={props.values.email} />\n          <ErrorMessage name=\"email\" render={msg => <ErrorText>{msg}</ErrorText>} />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            onChange={props.handleChange}\n            value={props.values.password} />\n          <ErrorMessage name=\"password\" render={msg => <ErrorText>{msg}</ErrorText>} />\n          <PrimaryButton type=\"submit\">LOG IN</PrimaryButton>\n        </AuthForm>\n      )}\n    </Formik>\n  );\n};","import { MainTitle } from \"components/common/MainTitle.styled\";\nimport { LoginForm } from \"components/LoginForm/LoginForm\";\n\nconst Login = () => {\n  return (\n    <>\n      <MainTitle>If you already have account, please log in</MainTitle>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default Login;"],"names":["nameRegExp","RegExp","numberRegExp","contactSchema","yup","shape","name","min","matches","required","number","length","registerSchema","email","password","logSchema","AuthForm","styled","Form","ErrorText","p","theme","colors","white","Input","MainTitle","fontWeight","bold","PrimaryButton","useRedux","useSelector","createSelectorHook","useDispatch","LoginForm","dispatch","initialValues","onSubmit","values","user","loginUser","validationSchema","props","I","type","placeholder","onChange","handleChange","value","render","msg"],"sourceRoot":""}